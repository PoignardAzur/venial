---
source: src/tests.rs
expression: impl_decl
---
Impl(
    Impl {
        attributes: [],
        tk_impl: Ident(
            impl,
        ),
        impl_generic_params: Some(
            [
                GenericParam {
                    name: "a",
                    bound: None,
                },
                GenericParam {
                    name: "T",
                    bound: None,
                },
                GenericParam {
                    name: "N",
                    bound: Some(
                        [
                            i8,
                        ],
                    ),
                },
            ],
        ),
        trait_ty: Some(
            [
                traits,
                ":",
                ":",
                MyTrait,
                "<",
                T,
                ",",
                N,
                ">",
            ],
        ),
        tk_for: Some(
            Ident(
                for,
            ),
        ),
        self_ty: [
            structs,
            ":",
            ":",
            MyStruct,
            "<",
            "'",
            a,
            ",",
            T,
            ">",
        ],
        where_clause: Some(
            [
                [
                    T,
                    ":",
                    Clone,
                ],
            ],
        ),
        tk_braces: {},
        body_items: [
            Constant(
                Constant {
                    attributes: [],
                    vis_marker: Some(
                        pub(
                            crate,
                        ),
                    ),
                    tk_const: Ident(
                        const,
                    ),
                    name: Ident(
                        CONSTANT,
                    ),
                    tk_colon: Punct {
                        char: ':',
                        spacing: Alone,
                    },
                    ty: [
                        i8,
                    ],
                    tk_equals: Punct {
                        char: '=',
                        spacing: Alone,
                    },
                    initializer: [
                        N,
                    ],
                    tk_semicolon: Punct {
                        char: ';',
                        spacing: Alone,
                    },
                },
            ),
        ],
    },
)
