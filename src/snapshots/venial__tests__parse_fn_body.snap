---
source: src/tests.rs
expression: func
---
Function(
    Function {
        attributes: [],
        vis_marker: None,
        qualifiers: FunctionQualifiers {
            tk_default: None,
            tk_const: None,
            tk_async: None,
            tk_unsafe: None,
            tk_extern: None,
            extern_abi: None,
        },
        name: Ident(
            hello_world,
        ),
        generic_params: None,
        tk_params_parens: (),
        params: [
            FunctionParameter {
                attributes: [],
                name: Ident(
                    a,
                ),
                tk_colon: Punct {
                    char: ':',
                    spacing: Alone,
                },
                ty: [
                    i32,
                ],
            },
            FunctionParameter {
                attributes: [],
                name: Ident(
                    b,
                ),
                tk_colon: Punct {
                    char: ':',
                    spacing: Alone,
                },
                ty: [
                    f32,
                ],
            },
        ],
        where_clause: None,
        tk_return_arrow: Some(
            [
                Punct {
                    char: '-',
                    spacing: Joint,
                },
                Punct {
                    char: '>',
                    spacing: Alone,
                },
            ],
        ),
        return_ty: Some(
            [
                String,
            ],
        ),
        body: Some(
            Group {
                delimiter: Brace,
                stream: TokenStream [
                    Ident {
                        sym: println,
                    },
                    Punct {
                        char: '!',
                        spacing: Alone,
                    },
                    Group {
                        delimiter: Parenthesis,
                        stream: TokenStream [
                            Literal {
                                lit: "hello world",
                            },
                        ],
                    },
                ],
            },
        ),
    },
)
