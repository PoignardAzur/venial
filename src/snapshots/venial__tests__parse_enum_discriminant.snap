---
source: src/tests.rs
assertion_line: 514
expression: enum_type
---
Enum(
    Enum {
        attributes: [],
        vis_marker: None,
        _enum: Ident(
            enum,
        ),
        name: Ident(
            Hello,
        ),
        generic_params: None,
        where_clauses: None,
        variants: [
            EnumVariant {
                attributes: [],
                vis_marker: None,
                name: Ident(
                    A,
                ),
                contents: Unit,
                discriminant: Some(
                    EnumDiscriminant {
                        tk_equal: Punct {
                            char: '=',
                            spacing: Alone,
                        },
                        expression: [
                            1,
                        ],
                    },
                ),
            },
            EnumVariant {
                attributes: [],
                vis_marker: None,
                name: Ident(
                    B,
                ),
                contents: Tuple(
                    [
                        TupleField {
                            attributes: [],
                            vis_marker: None,
                            ty: [
                                Foo,
                            ],
                        },
                        TupleField {
                            attributes: [],
                            vis_marker: None,
                            ty: [
                                Bar,
                            ],
                        },
                    ],
                ),
                discriminant: Some(
                    EnumDiscriminant {
                        tk_equal: Punct {
                            char: '=',
                            spacing: Alone,
                        },
                        expression: [
                            call,
                            ":",
                            ":",
                            some,
                            ":",
                            ":",
                            function,
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Literal {
                                        lit: 1,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Literal {
                                        lit: 2,
                                    },
                                    Punct {
                                        char: ',',
                                        spacing: Alone,
                                    },
                                    Group {
                                        delimiter: Brace,
                                        stream: TokenStream [
                                            Literal {
                                                lit: 3,
                                            },
                                        ],
                                    },
                                ],
                            },
                        ],
                    },
                ),
            },
            EnumVariant {
                attributes: [],
                vis_marker: None,
                name: Ident(
                    C,
                ),
                contents: Named(
                    [
                        NamedField {
                            attributes: [],
                            vis_marker: None,
                            name: Ident(
                                foo,
                            ),
                            tk_colon: Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            ty: [
                                Foo,
                            ],
                        },
                        NamedField {
                            attributes: [],
                            vis_marker: None,
                            name: Ident(
                                bar,
                            ),
                            tk_colon: Punct {
                                char: ':',
                                spacing: Alone,
                            },
                            ty: [
                                Bar,
                            ],
                        },
                    ],
                ),
                discriminant: Some(
                    EnumDiscriminant {
                        tk_equal: Punct {
                            char: '=',
                            spacing: Alone,
                        },
                        expression: [
                            A,
                            "<",
                            B,
                            ">",
                            Group {
                                delimiter: Parenthesis,
                                stream: TokenStream [
                                    Ident {
                                        sym: c,
                                    },
                                ],
                            },
                            "+",
                            Group {
                                delimiter: Brace,
                                stream: TokenStream [
                                    Ident {
                                        sym: D,
                                    },
                                ],
                            },
                        ],
                    },
                ),
            },
        ],
    },
)
